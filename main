#!/bin/bash

# Defaults
fontSize=15
trainingLines=./traininglines.txt

_scriptRoot="$(dirname $(realpath $0))"
cd "${_scriptRoot}"

while [ $# -gt 0 ]
do
  case "$(tr '[:upper:]' '[:lower:]'<<<$1)" in
    -font)
      fontFile="$2"
      echo "Using font file: ${fontFile}"
      shift
    ;;
    -traininglines)
      trainingLines="$2"
      echo "Using custom traininglines file: ${trainingLines}"
      shift
    ;;
    -fontsize)
      fontSize="$2"
      echo "Generating tifs with custom font size: ${fontSize}"
      shift
    ;;
    --)
      shift
      echo "Assuming the remaining arguments are intended for tesstrain: ${@}"
      remainingArguments="${@}"
      break
    ;;
  esac
  shift
done

# Validate the given -font argument has been set and that the file exists.
if [ -z "${fontFile}" ]
then
  echo "Need a '-font filename' to train"
  exit 1
elif ! [ -f "${fontFile}" ]
then
  echo "Given font :${fontFile}: does not exist."
  exit 1
fi

fontFileBasename="$(basename "${fontFile}")"
fontFileNoSuffix="${fontFile/.*/}"
fontFileGroundTruthDir="${fontFileNoSuffix}-ground-truth"

# Validate that the default traininglines file or a custom -traininglines file has been provided and exists.
if [ -z "${trainingLines}" ]
then
  echo "Need a '-font filename' to train"
  exit 1
elif ! [ -f "${trainingLines}" ]
then
  echo "Wordlist file :${trainingLines}: doesn't exist."
  echo "Create one with lines of text you wish to train against or specify a different file with '-traininglines filename'"
  exit 1
fi

# Get or update tesstrain
if ! [ -d "tesstrain" ]
then
  git clone https://github.com/tesseract-ocr/tesstrain
else
  git -C tesstrain pull
fi

# Make a training directory
mkdir -p tesstrain/data/${fontFileGroundTruthDir}


# Check if we need to generate or regenerate our tifs and txts.

if ls tesstrain/data/${fontFileGroundTruthDir}/*gt.txt >/dev/null 2>&1
then
  existingLines=$(cat $(ls -1 tesstrain/data/${fontFileGroundTruthDir}/*gt.txt | sort -V))
  trainingLinesContent="$(<"${trainingLines}")"

  if [[ "${existingLines}" == "${trainingLinesContent}" ]]
  then
    echo "Training Lines match existing generated txts. Skipping tif regeneration."
    skipTraining=1
  fi
fi

if [ -z "${skipTraining}" ]
then
  # Generate tifs and txt's for training.
  echo "Generating tif's and transcription txt's..."
  inc=0
  while read textLine
  do
    convert -background black \
            -fill white \
            -font ${fontFile} \
            -pointsize ${fontSize} \
            label:"${textLine//%/\\%}" \
            -depth 8 \
            tesstrain/data/${fontFileGroundTruthDir}/eng_${inc}.tif
  
    # Create a text file of the image text to train against.
    echo -n "${textLine}" > tesstrain/data/${fontFileGroundTruthDir}/eng_${inc}.gt.txt
    ((inc++))
  done < ${trainingLines}
fi

# Start training.
echo "Beginning training for ${fontFile} with text lines generated from ${trainingLines}"
cd tesstrain && make training MODEL_NAME=${fontFileNoSuffix} ${remainingArguments}
